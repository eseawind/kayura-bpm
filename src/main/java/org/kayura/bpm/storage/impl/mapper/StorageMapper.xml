<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.3//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kayura.bpm.storage.impl.mapper.StorageMapper">

	<!-- ************************************************************ -->
	<!-- *******************  引用组织机构  ************************** -->
	<!-- ************************************************************ -->
	
	<resultMap id="actorMap" type="org.kayura.bpm.types.Actor">
		<id property="id" column="Actor_Id" />
		<result property="parentId" column="Parent_Id" />
		<result property="employeeId" column="Employee_Id" />
		<result property="displayName" column="DisplayName" />
		<result property="departmentId" column="Department_Id" />
		<result property="positionId" column="Position_Id" />
	</resultMap>
	
	<sql id="actorColumns">
		${alias}.Actor_Id AS ${prefix}Actor_Id,
		${alias}.Parent_Id AS ${prefix}Parent_Id,
		${alias}.Employee_Id AS ${prefix}Employee_Id,
		${alias}.DisplayName AS ${prefix}DisplayName,
		${alias}.Department_Id AS ${prefix}Department_Id,
		${alias}.Position_Id AS ${prefix}Position_Id
	</sql>

	<!-- ************************************************************ -->
	<!-- *******************  工作流定义   ************************** -->
	<!-- ************************************************************ -->

	<!-- 工作流业务表单 BizForm -->

    <resultMap id="bizFormMap" type="org.kayura.bpm.models.BizForm">
        <id column="BizForm_Id" property="id" />
        <result column="Code" property="code" />
        <result column="DisplayName" property="displayName" />
        <result column="Sn" property="sn" />
        <result column="Description" property="description" />
        <result column="Attributes" property="attributes" typeHandler="jsonTypeHandler" />
        <result column="Status" property="status" />
    </resultMap>
        
    <sql id="bizFormColumns">
        ${alias}.BizForm_Id, 
        ${alias}.Code, 
        ${alias}.DisplayName, 
        ${alias}.Sn, 
        ${alias}.Description, 
        ${alias}.Attributes, 
        ${alias}.Status
    </sql>
    
    <select id="getBizFormById" parameterType="string" resultMap="bizFormMap">
        SELECT 
        	<include refid="bizFormColumns">
        	    <property name="alias" value="t"/>
        	</include>
		FROM Bpm_BizForm t 
		WHERE t.BizForm_Id = #{id} 
    </select>
    
    <select id="findBizForms" parameterType="map" resultMap="bizFormMap">
		SELECT 
        	<include refid="bizFormColumns">
        	    <property name="alias" value="t"/>
        	</include>
		FROM Bpm_BizForm t
		<where>
		    <if test="keyword != null">
				( t.Code like #{keyword} OR t.DisplayName like #{keyword} OR t.Description like #{keyword} )
		    </if>
		    <if test="status != null">
		        ( t.Status = #{status} )
		    </if>
		</where>
    </select>
    
    <select id="bizFormExists" parameterType="string" resultType="boolean">
        SELECT COUNT(1) > 0 
		FROM Bpm_BizForm t 
		WHERE t.BizForm_Id = #{id} 
    </select>
    
    <insert id="insertBizForm" parameterType="org.kayura.bpm.models.BizForm">
        INSERT Bpm_BizForm (
	        BizForm_Id,
			Code,
			DisplayName,
			Sn,
			Description,
			Attributes,
			Status     
		) Values (
			#{id},
			#{code},
			#{displayName},
			#{sn},
			#{description},
			#{attributes,typeHandler=jsonTypeHandler}, 
			#{status}
		)
    </insert>
    
    <update id="updateBizForm" parameterType="org.kayura.bpm.models.BizForm">
        UPDATE Bpm_BizForm
        SET	Code = #{code},
        	DisplayName = #{displayName},
        	Sn = #{sn},
        	Description = #{description},
        	Attributes = #{attributes,typeHandler=jsonTypeHandler}, 
        	Status = #{status}
        WHERE BizForm_Id = #{id}
    </update>
    
    <update id="updateBizFormForStatus" parameterType="map">
        UPDATE Bpm_BizForm
        SET	Status = #{status}
        WHERE BizForm_Id = #{id}
    </update>
    
    <delete id="deleteBizFormById" parameterType="string">
		DELETE FROM Bpm_BizForm
        WHERE BizForm_Id = #{id}
    </delete>
    
	<!-- 工作流过程定义 WorkflowProcess -->

	<resultMap id="workflowPorcessMap" type="org.kayura.bpm.models.WorkflowProcess">
		<id property="id" column="Process_Id" />
		<result property="code" column="Code" />
		<result property="name" column="Name" />
		<result property="description" column="Description" />
		<result property="version" column="Version" />
		<result property="createdTime" column="CreatedTime" />
		<result property="modifiedTime" column="ModifiedTime" />
		<result property="modifier" column="Modifier" />
		<result property="listeners" column="Listeners" typeHandler="jsonTypeHandler" />
		<result property="attributes" column="Attributes" typeHandler="jsonTypeHandler" />
		<result property="status" column="Status" />
		
		<association property="bizForm" column="BizForm_Id" select="getBizFormById" />
		<association property="parent" column="Parent_Id" select="selectWorkflowProcessById" />
		
		<association property="startNode" column="Process_Id" select="selectStartNodeByProcess" />
		<collection property="activities" column="Process_Id" select="selectActivitiesByProcess" />
		<collection property="routes" column="Process_Id" select="selectRoutesByProcess" />
		<collection property="endNodes" column="Process_Id" select="selectEndNodesByProcess" />
		<collection property="transitions" column="Process_Id" select="selectTransitionByProcess" />
	</resultMap>
	
	<sql id="workflowPorcessColumns">
	    ${alias}.Process_Id, 
	    ${alias}.Parent_Id, 
	    ${alias}.BizForm_Id, 
	    ${alias}.Code, 
	    ${alias}.Name, 
	    ${alias}.Description, 
	    ${alias}.Version,
		${alias}.CreatedTime, 
	    ${alias}.ModifiedTime, 
	    ${alias}.Modifier, 
	    ${alias}.Listeners, 
	    ${alias}.Attributes, 
	    ${alias}.Status
	</sql>
	
	<select id="getWorkflowProcessIdByMap" parameterType="map" resultType="string">
		SELECT t.Process_Id
		FROM Bpm_Process t 
			<if test="flowCode != null">
			    JOIN Bpm_BizForm b ON t.BizForm_Id = b.BizForm_Id
			</if>
		<where>
			<if test="flowCode != null">
			    and ( b.Code = #{flowCode} ) 
			</if>
			<if test="version != null">
			    and ( t.Version = #{version} ) 
			</if>
			<if test="status != null">
			    and ( t.`Status` = #{status} ) 
			</if>
		</where>
		ORDER BY t.Version DESC
		LIMIT 1
	</select>

	<select id="getWorkflowProcessMaxVersion" parameterType="string" resultType="int">
		SELECT Max(t.Version)
		FROM Bpm_Process t
		WHERE
			<choose>
				<when test="value != null">
					( t.BizForm_Id = #{value} )
				</when>
				<otherwise>
					( t.BizForm_Id IS NULL )
				</otherwise>
			</choose>
	</select>
	
	<select id="selectWorkflowProcessById" parameterType="string" resultMap="workflowPorcessMap">
		SELECT
			<include refid="workflowPorcessColumns">
			    <property name="alias" value="t"/>
			</include>
		FROM Bpm_Process t 
		WHERE ( t.Process_Id = #{id} ) 
	</select>
	
	<select id="workflowProcessExists" parameterType="string" resultType="boolean">
	   	SELECT COUNT(1) = 0 FROM Bpm_Process t WHERE t.Process_Id = #{id}
	</select>
	
	<insert id="insertWorkflowProcess" parameterType="org.kayura.bpm.models.WorkflowProcess">
	    INSERT Bpm_Process (
		    Process_Id,
			Parent_Id,
			BizForm_Id,
			Code,
			Name,
			Description,
			Version,
			CreatedTime,
			ModifiedTime,
			Modifier,
			Listeners,
			Attributes,
			Status
		) Values (
			#{id},
			<choose>
			    <when test="parent != null and parent.id != null">
			        #{parent.id}
			    </when>
			    <otherwise>
			        null,
			    </otherwise>
			</choose>
			#{bizForm.id},
			#{code},
			#{name},
			#{description},
			#{version},
			#{createdTime},
			#{modifiedTime},
			#{modifier},
			#{listeners,typeHandler=jsonTypeHandler},
			#{attributes,typeHandler=jsonTypeHandler}, 
			#{status}
		)
	</insert>
	
	<update id="updateWorkflowProcess" parameterType="org.kayura.bpm.models.WorkflowProcess">
	    UPDATE Bpm_Process
	    SET Code = #{code},
	    	Name = #{name},
	    	Description = #{description},
			ModifiedTime = #{modifiedTime},
			Modifier = #{modifier},
			Listeners = #{listeners,typeHandler=jsonTypeHandler},
			Attributes = #{attributes,typeHandler=jsonTypeHandler}, 
			Status = #{status}
		WHERE Process_Id = #{id}
	</update>
	
	<update id="updateWorkflowProcessForStatus" parameterType="string">
	    UPDATE Bpm_Process 
	    SET Status = #{status} 
	    WHERE Process_Id = #{id}
	</update>

	<delete id="deleteWorkflowProcessById" parameterType="string">
	    DELETE FROM Bpm_Process WHERE Process_Id = #{id}
	</delete>
	
	<delete id="deleteWorkflowProcessByBizFromId" parameterType="string">
	    DELETE FROM Bpm_Process WHERE BizFrom_Id = #{bizFromId}
	</delete>
	
	<!-- WorkflowProcess.Node -->

	<resultMap id="nodeMap" type="org.kayura.bpm.models.Node">
		<id column="Node_Id" property="id" />
		<result column="Code" property="code" />
		<result column="Name" property="name" />
		<result column="Description" property="description" />
		<result column="Listeners" property="listeners" typeHandler="jsonTypeHandler" />
		<result column="Attributes" property="attributes" typeHandler="jsonTypeHandler" />
		<result column="CreatedTime" property="createdTime" />
		<result column="ModifiedTime" property="modifiedTime" />
		
		<association property="parent" column="Process_Id" select="selectWorkflowProcessById" />
		<collection property="fromTransitions" column="Node_Id" select="selectTransitionByFrom" />
		<collection property="toTransitions" column="Node_Id" select="selectTransitionByTo" />
		
		<!-- 0 StartNode; 1 Activity; 2 Route; 3 EndNode; -->
		<discriminator javaType="int" column="NodeType">
			<case value="0" resultType="org.kayura.bpm.models.StartNode" />
			<case value="1" resultType="org.kayura.bpm.models.Activity">
				<result column="HandleType" property="handleType" />
				<collection property="actors" column="Node_Id" select="selectActivityActorsByNodeId" />
			</case>
			<case value="2" resultType="org.kayura.bpm.models.Route">
				<result column="RouteType" property="routeType" />
			</case>
			<case value="3" resultType="org.kayura.bpm.models.EndNode" />
		</discriminator>
	</resultMap>
	
	<resultMap id="activityActorMap" type="org.kayura.bpm.models.ActivityActor">
		<id property="id" column="ActivityActor_Id" />
		<result property="actorId" column="Actor_Id" />
		<result property="displayName" column="DisplayName" />
		<result property="sn" column="Sn" />
		<result property="actorType" column="ActorType" />
		<association property="activity" column="Activity_Id" select="selectActivityById" />
	</resultMap>
	
	<resultMap id="transitionMap" type="org.kayura.bpm.models.Transition">
	    <id property="id" column="Transition_Id" />
		<result column="Code" property="code" />
		<result column="Name" property="name" />
		<result column="Description" property="description" />
		<result column="Listeners" property="listeners" typeHandler="jsonTypeHandler" />
		<result column="Attributes" property="attributes" typeHandler="jsonTypeHandler" />
		<result column="CreatedTime" property="createdTime" />
		<result column="CreatedTime" property="createdTime" />
		<result column="ModifiedTime" property="modifiedTime" />
		<result column="Conditions" property="conditions" />
		<association property="parent" column="Process_Id" select="selectWorkflowProcessById"/>
		<association property="fromNode" column="FromNode_Id" select="selectActivityById"/>
		<association property="toNode" column="ToNode_Id" select="selectActivityById"/>
	</resultMap>
	
	<sql id="nodeColumns">
    	${alias}.Node_Id, 
    	${alias}.Process_Id, 
    	${alias}.Code, 
    	${alias}.Name, 
    	${alias}.Description, 
    	${alias}.NodeType, 
    	${alias}.Listeners,
		${alias}.Attributes, 
		${alias}.CreatedTime, 
		${alias}.ModifiedTime, 
		${alias}.RouteType, 
		${alias}.HandleType
	</sql>

	<sql id="insertNodeColumns">
    	Node_Id,
    	Process_Id,
    	Code,
    	Name,
    	Description,
    	NodeType,
    	Listeners,
		Attributes, 
		CreatedTime, 
		ModifiedTime
	</sql>
	
	<sql id="insertNodeValues">
	    #{id},
    	#{parent.id},
    	#{code},
    	#{name},
    	#{description},
    	#{nodeType},
    	#{listeners,typeHandler=jsonTypeHandler},
		#{attributes,typeHandler=jsonTypeHandler},
		#{createdTime}, 
		#{modifiedTime}
	</sql>

	<sql id="updateNodeColumns">
    	Code = #{code},
    	Name = #{name},
    	Description = #{description},
    	Listeners = #{listeners,typeHandler=jsonTypeHandler},
		Attributes = #{attributes,typeHandler=jsonTypeHandler}, 
		ModifiedTime = #{modifiedTime}
	</sql>
	
	<sql id="transitionColumns">
	    ${alias}.Transition_Id,
		${alias}.FromNode_Id,
		${alias}.ToNode_Id,
		${alias}.Process_Id,
		${alias}.Code,
		${alias}.Name,
		${alias}.Description,
		${alias}.Listeners,
		${alias}.Attributes,
		${alias}.CreatedTime,
		${alias}.ModifiedTime,
		${alias}.Conditions
	</sql>
	
	<!-- 仅查询节点ID与节点类型. -->
	<select id="findNodeIdsNodeType" parameterType="string" 
	    resultType="org.kayura.bpm.storage.impl.po.IdNodeType">
	    SELECT
			t.Node_Id, t.NodeType
		FROM Bpm_Nodes t
		WHERE ( t.Process_Id = #{value} )
	</select>

	<!-- 根据过程ID获取唯一的开始节点. -->
	<select id="selectStartNodeByProcess" parameterType="string" resultMap="nodeMap">
	    SELECT
			<include refid="nodeColumns">
			    <property name="alias" value="t"/>
			</include>
		FROM Bpm_Nodes t
		WHERE ( t.Process_Id = #{value} ) AND ( t.NodeType = 0 )
		LIMIT 1
	</select>
	
	<!-- 根据过程ID获取活动节点. -->
	<select id="selectActivitiesByProcess" parameterType="string" resultMap="nodeMap">
	    SELECT
			<include refid="nodeColumns">
			    <property name="alias" value="t"/>
			</include>
		FROM Bpm_Nodes t
		WHERE ( t.Process_Id = #{value} ) AND ( t.NodeType = 1 )
	</select>
		
	<select id="selectActivityById" parameterType="string" resultMap="nodeMap">
	    SELECT
			<include refid="nodeColumns">
			    <property name="alias" value="t"/>
			</include>
		FROM Bpm_Nodes t
		WHERE ( t.Node_Id = #{value} )
	</select>
	
	<!-- 根据过程ID获取路由节点. -->
	<select id="selectRoutesByProcess" parameterType="string" resultMap="nodeMap">
	    SELECT
			<include refid="nodeColumns">
			    <property name="alias" value="t"/>
			</include>
		FROM Bpm_Nodes t
		WHERE ( t.Process_Id = #{value} ) AND ( t.NodeType = 2 )
	</select>
	
	<!-- 根据过程ID获取结束节点. -->
	<select id="selectEndNodesByProcess" parameterType="string" resultMap="nodeMap">
	    SELECT
			<include refid="nodeColumns">
			    <property name="alias" value="t"/>
			</include>
		FROM Bpm_Nodes t
		WHERE ( t.Process_Id = #{value} ) AND ( t.NodeType = 3 )
	</select>
	
	<!-- 根据过程ID获取所有环节对象. -->
	<select id="selectNodesByProcess" parameterType="string" resultMap="nodeMap">
	    SELECT
			<include refid="nodeColumns">
			    <property name="alias" value="t"/>
			</include>
		FROM Bpm_Nodes t
		WHERE t.Process_Id = #{value}
	</select>
	
	<!-- 根据环节ID获取该环节对象. -->
	<select id="selectNodeById" parameterType="string" resultMap="nodeMap">
	    SELECT
			<include refid="nodeColumns">
			    <property name="alias" value="t"/>
			</include>
		FROM Bpm_Nodes t
		WHERE t.Node_Id = #{value}
	</select>
	
	<insert id="insertNodeStartNode" parameterType="org.kayura.bpm.models.StartNode">
	    INSERT Bpm_Nodes (
	    	<include refid="insertNodeColumns" />
	    ) Values (
	    	<include refid="insertNodeValues" />
	    )
	</insert>

	<insert id="insertNodeActivity" parameterType="org.kayura.bpm.models.Activity">
	    INSERT Bpm_Nodes (
	    	<include refid="insertNodeColumns" />
	    	, HandleType
	    ) Values (
	    	<include refid="insertNodeValues" />
	    	, #{handleType}
	    )
	</insert>
	
	<insert id="insertNodeRoute" parameterType="org.kayura.bpm.models.Route">
	    INSERT Bpm_Nodes (
	    	<include refid="insertNodeColumns" />
	    	, RouteType
	    ) Values (
	    	<include refid="insertNodeValues" />
	    	, #{routeType}
	    )
	</insert>
	
	<insert id="insertNodeEndNode" parameterType="org.kayura.bpm.models.EndNode">
	    INSERT Bpm_Nodes (
	    	<include refid="insertNodeColumns" />
	    ) Values (
	    	<include refid="insertNodeValues" />
	    )
	</insert>

	<update id="updateNodeStartNode" parameterType="org.kayura.bpm.models.StartNode">
	    UPDATE Bpm_Nodes
	    SET <include refid="updateNodeColumns" />
		WHERE Node_Id = #{id}
	</update>

	<update id="updateNodeActivity" parameterType="org.kayura.bpm.models.Activity">
	    UPDATE Bpm_Nodes
	    SET <include refid="updateNodeColumns" />
			, HandleType = #{handleType}
		WHERE Node_Id = #{id}
	</update>

	<update id="updateNodeRoute" parameterType="org.kayura.bpm.models.Route">
	    UPDATE Bpm_Nodes
	    SET <include refid="updateNodeColumns" />
			, RouteType = #{routeType}
		WHERE Node_Id = #{id}
	</update>
	
	<update id="updateNodeEndNode" parameterType="org.kayura.bpm.models.EndNode">
	    UPDATE Bpm_Nodes
	    SET <include refid="updateNodeColumns" />
		WHERE Node_Id = #{id}
	</update>
	
	<delete id="deleteNodeByIds" parameterType="list">
		DELETE FROM Bpm_Nodes
		WHERE Node_Id IN
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- WorkflowProcess.Transitions -->

	<select id="selectTransitionByProcess" parameterType="string" resultMap="transitionMap">
	    SELECT 
			<include refid="transitionColumns">
			    <property name="alias" value="t"/>
			</include>
	    FROM Bpm_Transitions t
	    WHERE t.Process_Id = #{processId}
	</select>
	
	<select id="selectTransitionByFrom" parameterType="string" resultMap="transitionMap">
	    SELECT 
			<include refid="transitionColumns">
			    <property name="alias" value="t"/>
			</include>
	    FROM Bpm_Transitions t
	    WHERE t.FromNode_Id = #{nodeId}
	</select>
	
	<select id="selectTransitionByTo" parameterType="string" resultMap="transitionMap">
	    SELECT 
			<include refid="transitionColumns">
			    <property name="alias" value="t"/>
			</include>
		FROM Bpm_Transitions t
	    WHERE t.ToNode_Id = #{nodeId}
	</select>
	
	<insert id="insertTransition" parameterType="org.kayura.bpm.models.Transition">
	    INSERT Bpm_Transitions (
	    	Transition_Id,
		    Process_Id,
		    FromNode_Id,
		    ToNode_Id,
			Code,
			Name,
			Description,
			Listeners,
			Attributes,
			CreatedTime,
			ModifiedTime,
			Conditions
		) Values (
			#{id},
			#{parent.id},
			#{fromNode.id},
			#{toNode.id},
			#{code},
			#{name},
			#{description},
			#{listeners,typeHandler=jsonTypeHandler},
			#{attributes,typeHandler=jsonTypeHandler}, 
			#{createdTime},
			#{modifiedTime},
			#{conditions}
	    )
	</insert>
	
	<delete id="deleteTransitionByProcess" parameterType="string">
	    DELETE FROM Bpm_Transitions
	    WHERE Process_Id = #{processId}
	</delete>
	
	<!-- WorkflowProcess.ActivityActors -->

	<sql id="activityActorColumns">
		${alias}.ActivityActor_Id,
		${alias}.Activity_Id,
		${alias}.Actor_Id,
		${alias}.Sn,
		${alias}.ActorType,
		${alias}.DisplayName
	</sql>
	
	<select id="selectActivityActorsByNodeId" parameterType="string" resultMap="activityActorMap" >
	    SELECT
			<include refid="activityActorColumns">
			    <property name="alias" value="t"/>
			</include>
		FROM Bpm_ActivityActors t
	    WHERE t.Activity_Id = #{nodeId}
	</select>
	
	<insert id="insertActivityActor" parameterType="org.kayura.bpm.models.ActivityActor">
	    INSERT Bpm_ActivityActors (
			ActivityActor_Id,
			Activity_Id,
			Actor_Id,
			Sn,
			ActorType,
			DisplayName
		) Values (
			#{id},
			#{activity.id},
			#{actorId},
			#{sn},
			#{actorType},
			#{displayName}
		)
	</insert>

	<delete id="deleteActivityActorByActivityIds">
		DELETE FROM Bpm_ActivityActors
		WHERE Activity_Id IN
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<!-- ************************************************************ -->
	<!-- ********************  工作流实例   ************************** -->
	<!-- ************************************************************ -->
	
	<!-- ProcessInstance -->

	<resultMap id="processInstanceMap" type="org.kayura.bpm.kernel.ProcessInstance">
		<id property="id" column="ProcessInstance_Id" />
		<result property="parentId" column="Parent_Id" />
		<result property="title" column="Title" />
		<result property="bizDataId" column="BizData_Id" />
		<result property="createdTime" column="CreatedTime" />
		<result property="completedTime" column="CompletedTime" />
		<result property="status" column="Status" />
		<association property="process" column="Process_Id" select="selectWorkflowProcessById" />
		<association property="creator" columnPrefix="Creator_" resultMap="actorMap" />
	</resultMap>
	
	<sql id="processInstanceColumns">
		${alias}.ProcessInstance_Id,
		${alias}.Parent_Id,
		${alias}.Process_Id,
		${alias}.Title,
		${alias}.BizData_Id,
		${alias}.CreatedTime,
		${alias}.CompletedTime,
		${alias}.Status
	</sql>
	
	<select id="getProcessInstanceById" parameterType="string" resultMap="processInstanceMap">
		SELECT
			<include refid="processInstanceColumns">
				<property name="alias" value="t"/>
			</include>,
			<include refid="actorColumns">
				<property name="alias" value="ca"/>
				<property name="prefix" value="Creator_"/>
			</include>
		FROM
			bpm_processinstance AS t
			INNER JOIN bpm_actors AS ca ON ca.Actor_Id = t.Creator_Id
		WHERE t.ProcessInstance_Id = #{id}
	</select>
	
	<select id="processInstanceExists" parameterType="string" resultType="boolean">
		SELECT COUNT(1) > 0
		FROM Bpm_ProcessInstance t
		WHERE t.ProcessInstance_Id = #{id}
	</select>

	<insert id="insertProcessInstance" parameterType="org.kayura.bpm.kernel.ProcessInstance">
		INSERT Bpm_ProcessInstance (
			ProcessInstance_Id,
			Parent_Id,
			Process_Id,
			Title,
			BizData_Id,
			Creator_Id,
			CreatedTime,
			CompletedTime,
			Status
		) Values (
			#{id},
			#{parentId},
			#{process.id},
			#{title},
			#{bizDataId},
			#{creator.id},
			#{createdTime},
			#{completedTime},
			#{status}
		)
	</insert>
	
	<update id="updateProcessInstance" parameterType="org.kayura.bpm.kernel.ProcessInstance">
		UPDATE Bpm_ProcessInstance
		SET	Parent_Id = #{parentId},
			Process_Id = #{process.id},
			Title = #{title},
			BizData_Id = #{bizDataId},
			Creater_Id = #{creater.id},
			CreatedTime = #{createdTime},
			CompletedTime = #{completedTime},
			Status = #{status}
		WHERE ProcessInstance_Id = #{id}
	</update>
	
	<delete id="deleteProcessInstance" parameterType="string">
		DELETE FROM Bpm_ProcessInstance
		WHERE ProcessInstance_Id = #{id}
	</delete>
	
	<!--  ActivityInstance  -->

	<resultMap id="activityInstanceMap" type="org.kayura.bpm.kernel.ActivityInstance">
		<id property="id" column="ActivityInstance_Id" />
		<result property="displayName" column="DisplayName" />
		<result property="createdTime" column="CreatedTime" />
		<result property="completedTime" column="CompletedTime" />
		<result property="preActInstanceId" column="PreActInstance_Id" />
		<result property="status" column="Status" />
		<result property="executeType" column="ExecuteType" />
		<association property="creator" resultMap="actorMap" columnPrefix="Creator_" />
		<association property="processInstance" column="ProcessInstance_Id" select="getProcessInstanceById" />
		<association property="activity" column="Activity_Id" select="selectActivityById" />
	</resultMap>
	
	<sql id="activityInstanceColumns">
		${alias}.ActivityInstance_Id,
		${alias}.ProcessInstance_Id,
		${alias}.Activity_Id,
		${alias}.DisplayName,
		${alias}.Creator_Id,
		${alias}.CreatedTime,
		${alias}.CompletedTime,
		${alias}.PreActInstance_Id,
		${alias}.Status,
		${alias}.ExecuteType
	</sql>
	
	<select id="getActivityInstanceById" parameterType="string" resultMap="activityInstanceMap">
		SELECT 
			<include refid="activityInstanceColumns">
				<property name="alias" value="t"/>
			</include>,
			<include refid="actorColumns">
				<property name="alias" value="ca"/>
				<property name="prefix" value="Creator_"/>
			</include>
		FROM Bpm_ActivityInstance t
			LEFT JOIN bpm_actors AS ca ON ca.Actor_Id = t.Creator_Id
		WHERE t.ActivityInstance_Id = #{value}
	</select>
	
	<select id="insertActivityInstance" parameterType="org.kayura.bpm.kernel.ActivityInstance">
		INSERT Bpm_ActivityInstance (
			ActivityInstance_Id,
			ProcessInstance_Id,
			Activity_Id,
			DisplayName,
			Creator_Id,
			CreatedTime,
			CompletedTime,
			PreActInstance_Id,
			Status,
			ExecuteType
		) Values (
			#{id},
			#{processInstance.id},
			#{activity.id},
			#{displayName},
			#{creator.id},
			#{createdTime},
			#{completedTime},
			#{preActInstanceId},
			#{status},
			#{executeType}
		)
	</select>
	
	<select id="updateActivityInstance" parameterType="org.kayura.bpm.kernel.ActivityInstance">
		UPDATE Bpm_ActivityInstance
		SET ProcessInstance_Id = #{processInstance.id},
			Activity_Id = #{activity.id},
			DisplayName = #{displayName},
			Creator_Id = #{creator.id},
			CreatedTime = #{createdTime},
			CompletedTime = #{completedTime},
			PreActInstance_Id = #{preActInstanceId},
			Status = #{status},
			ExecuteType = #{executeType}
		WHERE ActivityInstance_Id = #{id},
	</select>
	
	<!-- WorkItems -->
	
	<resultMap id="workItemMap" type="org.kayura.bpm.kernel.WorkItem">
		<id property="id" column="WorkItem_Id" />
		<result property="sn" column="Sn" />
		<result property="priority" column="Priority" />
		<result property="createdTime" column="CreatedTime" />
		<result property="alarmTime" column="AlarmTime" />
		<result property="depth" column="Depth" />
		<result property="taskType" column="TaskType" />
		<result property="status" column="Status" />
		<result property="comment" column="Comment" />
		<result property="completedTime" column="CompletedTime" />
		
		<association property="parent" column="Parent_Id" select="getWorkItemById" />
		<association property="activityInstance" column="ActivityInstance_Id" select="getActivityInstanceById" />
		<association property="sender" resultMap="actorMap" columnPrefix="Sender_" />
		<association property="owner" resultMap="actorMap" columnPrefix="Owner_" />
		<association property="handler" resultMap="actorMap" columnPrefix="Handler_" />
	</resultMap>
	
	<sql id="workItemColumns">
		${alias}.WorkItem_Id,
		${alias}.ActivityInstance_Id,
		${alias}.Parent_Id,
		${alias}.Sender_Id,
		${alias}.Owner_Id,
		${alias}.Sn,
		${alias}.Priority,
		${alias}.CreatedTime,
		${alias}.AlarmTime,
		${alias}.Depth,
		${alias}.TaskType,
		${alias}.Status,
		${alias}.Handler_Id,
		${alias}.Comment,
		${alias}.CompletedTime
	</sql>
	
	<select id="getWorkItemById" parameterType="string" resultMap="workItemMap">
		SELECT
			<include refid="workItemColumns">
				<property name="alias" value="t"/>
			</include>,
			<include refid="actorColumns">
				<property name="alias" value="sa"/>
				<property name="prefix" value="Sender_"/>
			</include>,
			<include refid="actorColumns">
				<property name="alias" value="oa"/>
				<property name="prefix" value="Owner_"/>
			</include>,
			<include refid="actorColumns">
				<property name="alias" value="ha"/>
				<property name="prefix" value="Handler_"/>
			</include>
		FROM
			bpm_workitems AS t
			LEFT JOIN bpm_actors AS sa ON sa.Actor_Id = t.Sender_Id
			LEFT JOIN bpm_actors AS oa ON oa.Actor_Id = t.Owner_Id
			LEFT JOIN bpm_actors AS ha ON ha.Actor_Id = t.Handler_Id
		WHERE t.WorkItem_Id = #{value}
	</select>
	
	<select id="findWorkItemByFirst" parameterType="string" resultMap="workItemMap">
		SELECT
			<include refid="workItemColumns">
				<property name="alias" value="t"/>
			</include>,
			<include refid="actorColumns">
				<property name="alias" value="sa"/>
				<property name="prefix" value="Sender_"/>
			</include>,
			<include refid="actorColumns">
				<property name="alias" value="oa"/>
				<property name="prefix" value="Owner_"/>
			</include>,
			<include refid="actorColumns">
				<property name="alias" value="ha"/>
				<property name="prefix" value="Handler_"/>
			</include>
		FROM
			bpm_workitems AS t
			LEFT JOIN bpm_actors AS sa ON sa.Actor_Id = t.Sender_Id
			LEFT JOIN bpm_actors AS oa ON oa.Actor_Id = t.Owner_Id
			LEFT JOIN bpm_actors AS ha ON ha.Actor_Id = t.Handler_Id
		WHERE ( t.Owner_Id = #{value} ) AND ( t.Status IN (0, 2) ) 
		ORDER BY t.Status, t.TaskType, t.Priority DESC, t.CreatedTime DESC
		LIMIT 1
	</select>
		
	
	<insert id="insertWorkItem" parameterType="org.kayura.bpm.kernel.WorkItem">
		INSERT INTO bpm_workitems (
			WorkItem_Id,
			ActivityInstance_Id,
			<if test="parent != null ">Parent_Id,</if>
			Sender_Id,
			Owner_Id,
			Sn,
			Priority,
			CreatedTime,
			AlarmTime,
			Depth,
			TaskType,
			Status
		) VALUES (
			#{id},
			#{activityInstance.id},
			<if test="parent != null ">#{parent.id},</if>
			#{sender.id},
			#{owner.id},
			#{sn},
			#{priority},
			#{createdTime},
			#{alarmTime},
			#{depth},
			#{taskType},
			#{status}
		)
	</insert>
	
	<update id="updateWorkItemByMap" parameterType="map">
		UPDATE bpm_workitems (
		<set>
			<if test="priority != null">Priority = #{priority},</if>
			<if test="alarmTime != null">AlarmTime = #{alarmTime},</if>
			<if test="sn != null">Sn = #{sn},</if>
			<if test="handlerId != null">Handler_Id = #{handlerId},</if>
			<if test="comment != null">Comment = #{comment},</if>
			<if test="completedTime != null">CompletedTime = #{completedTime},</if>
			<if test="status != null">Status = #{status}</if>
		</set>
		WHERE WorkItem_Id = #{id}
	</update>

	<select id="workItemCountByMap" parameterType="map" resultType="int">
		SELECT COUNT(1)
		FROM bpm_workitems AS t
		<where>
			<if test="activityInstanceId != null">
				AND t.ActivityInstance_Id = #{activityInstanceId}
			</if>
			<if test="sn != null">
				AND t.SN = #{sn} -- 指定的相同序号.
			</if>
			<if test="excludeId != null">
				AND t.WorkItem_Id != #{excludeId}  -- 排除掉的 WorkItemId.
			</if>
			<if test="parentId != null">
				AND t.Parent_Id = #{parentId}
			</if>
			<if test="taskType != null">
				AND t.TaskType = #{taskType} 
			</if>
			<if test="status != null">
				AND t.Status IN ( ${status} )
			</if>
		</where>		
	</select>

</mapper>
